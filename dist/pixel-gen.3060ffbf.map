{"version":3,"sources":["classes/Pixel.js","helpers.js","resources/colors.js","classes/Canvas.js","node_modules/downloadjs/download.js","index.js"],"names":["Pixel","coords","x","y","color","size","w","h","opacity","ctx","beginPath","rect","fillStyle","fill","range","start","end","Array","map","_","idx","randomFloat","n","Math","random","randNum","min","max","floor","roundToNearest","nearest","round","randIndex","arr","console","log","length","colors","Canvas","c","canvas","spp","context","frameId","undefined","bgColor","palette","ppf","helpers","width","height","iterator","colorIndex","reverse","clear","pickRandomPalette","setInitialColors","animate","strokeStyle","fillRect","window","cancelAnimationFrame","clearRect","requestAnimationFrame","forEach","draw","randX","randY","object","init","dpiRatio","devicePixelRatio","document","querySelector","stop","setCanvasSize","initial","innerWidth","style","convertToPng","pngData","toDataURL","getContext","scale","canvasObj","addEventListener","clearCanvas","innerText","download","removeEventListener","classList","remove","add","stopCanvas"],"mappings":"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","file":"pixel-gen.3060ffbf.map","sourceRoot":"..","sourcesContent":["export default class Pixel {\n  constructor(\n    coords = { x: 1, y: 1 },\n    color = \"#000000\",\n    size = { w: 10, h: 10 }\n  ) {\n    this.x = coords.x;\n    this.y = coords.y;\n    this.w = size.w;\n    this.h = size.h;\n    this.opacity = 0;\n    this.color = color;\n  }\n  init(ctx) {\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, this.w, this.h);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    return {\n      x: this.x,\n      y: this.y,\n      w: this.w,\n      h: this.h\n    };\n  }\n}\n","export function range(start, end) {\n  return Array(end - start + 1)\n    .fill()\n    .map((_, idx) => start + idx);\n}\n\nexport const randomFloat = n => Math.random();\n\nexport function randNum(min = 0, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nexport function roundToNearest(n, nearest) {\n  return Math.round(n / nearest) * nearest;\n}\n\nexport function randIndex(arr) {\n  console.log(\">>\", arr[Math.floor(Math.random() * arr.length)]);\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport default { randNum, randIndex, randomFloat, range, roundToNearest };\n","export const colors = [\n  [\"#084C61\", \"#DB504A\", \"#E3B505\", \"#4F6D7A\", \"#56A3A6\"],\n  [\"#BC201D\", \"#1F7B41\", \"#4DC697\", \"#FFD777\", \"#449FB7\"],\n  [\"#F52148\", \"#6D2F62\", \"#FA9464\", \"#567BF3\", \"#E54E1E\"],\n  [\"#4441fd\", \"#fb3a5e\", \"#fea13a\"],\n  [\"#E3E3E3\", \"#CACACA\", \"#A8A8A8\", \"#939393\"],\n  [\"##42CE68\", \"#4EBD2D\", \"#75DE56\", \"#A5EC91\", \"#3A8226\"],\n  [\"#5C8EE7\", \"#3E75D6\", \"#275EBF\", \"#88B2FD\", \"#2052A9\"],\n  [\"#F54D20\", \"#FF734E\", \"#FF9C81\", \"#B82800\", \"#F85C31\"],\n  [\"#FFD6F6\", \"#F6ADE6\", \"#DE75C7\", \"#FF59DB\"]\n];\n\nexport default colors;\n","import Pixel from \"./Pixel\";\nimport helpers from \"../helpers\";\nimport { colors } from \"../resources/colors\";\n\nexport default class Canvas {\n  constructor(c, canvas, spp = 10) {\n    this.context = c;\n    this.frameId = undefined;\n    this.canvas = canvas;\n    this.bgColor = \"#282828\";\n    this.colors = colors;\n    this.palette = [];\n    this.ppf = helpers.range(0, 20); // pixel per frame\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.iterator = 0;\n    this.colorIndex = 0;\n    this.reverse = false;\n    this.clear = false;\n    this.spp = spp; // size per pixel\n  }\n\n  init(c) {\n    this.palette = this.pickRandomPalette(this.colors);\n    this.setInitialColors(c);\n    this.animate(c);\n  }\n\n  pickRandomPalette(colors) {\n    return helpers.randIndex(colors);\n  }\n\n  setInitialColors(c) {\n    c.strokeStyle = this.palette[this.palette.length - 1];\n    c.fillStyle = \"white\";\n    c.fillRect(0, 0, this.width, this.height);\n  }\n\n  clearCanvas(c) {\n    // set clear flag to 'true' to restart 'generator' loop\n    this.clear = true;\n    window.cancelAnimationFrame(this.frameId);\n    this.iterator = 0;\n    c.clearRect(0, 0, this.width, this.height);\n    this.setInitialColors(c);\n  }\n\n  stopCanvas(c) {\n    window.cancelAnimationFrame(this.frameId);\n  }\n\n  animate(c) {\n    let self = () => this.animate(c);\n    this.frameId = requestAnimationFrame(self);\n    // pixel per frame\n    this.ppf.forEach(() => {\n      let object = this.draw(c);\n    });\n  }\n\n  draw(ctx) {\n    let randX = helpers.randNum(0, this.width);\n    let randY = helpers.randNum(0, this.height);\n    let pixel;\n    let object;\n    let coords = {\n      x: helpers.roundToNearest(randX, this.spp),\n      y: helpers.roundToNearest(randY, this.spp)\n    };\n    let size = {\n      w: this.spp,\n      h: this.spp\n    };\n    pixel = new Pixel(\n      coords,\n      this.palette[Math.floor(Math.random() * this.palette.length)],\n      size\n    );\n    object = pixel.init(ctx);\n    return object;\n  }\n}\n","//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t  \n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n","import Canvas from \"./classes/Canvas\";\nimport { roundToNearest } from \"./helpers\";\nimport download from \"downloadjs\";\n\nconst dpiRatio = window.devicePixelRatio;\nconst canvas = document.querySelector(\"#canvas\");\nconst start = document.querySelector(\"#start\");\nconst stop = document.querySelector(\"#stop\");\n\nfunction setCanvasSize() {\n  let initial;\n  if (window.innerWidth <= 500) {\n    initial = 420;\n    canvas.height = initial;\n    canvas.width = initial / 2;\n    canvas.style.height = canvas.height + \"px\";\n    canvas.style.width = canvas.width + \"px\";\n    return 5;\n  } else {\n    initial = 1000;\n    canvas.height = initial / 2;\n    canvas.width = initial;\n    canvas.style.height = initial / 3 + \"px\";\n    canvas.style.width = initial / 1.5 + \"px\";\n    return 10;\n  }\n}\n\nfunction convertToPng() {\n  const pngData = canvas.toDataURL(\"image/png\");\n  download(pngData, \"pixel-gen.png\", \"data:image/png\");\n}\n\nconst spp = setCanvasSize();\n\nlet c = canvas.getContext(\"2d\");\nc.scale(dpiRatio, dpiRatio);\n\nlet canvasObj = new Canvas(c, canvas, spp);\n\nstart.addEventListener(\"click\", () => {\n  canvasObj.clearCanvas(c);\n  canvasObj.init(c);\n  start.innerText = \"restart\";\n\n  const download = document.querySelector(\".download\");\n  if (download) {\n    download.removeEventListener(\"click\", convertToPng);\n    stop.classList.remove(\"download\");\n    stop.innerText = \"stop\";\n  }\n});\n\nstop.addEventListener(\"click\", () => {\n  stop.classList.add(\"download\");\n  stop.innerText = \"download?\";\n  canvasObj.stopCanvas(c);\n  document.querySelector(\".download\").addEventListener(\"click\", convertToPng);\n});\n"]}